#!/bin/bash

## Usage: script_name.sh -b backup_dir -t tarball-dir -p password
##  if you don't provide backup_dir or tarball_dir or password it will use the default ones in the script.
##  if you add the -n argument it will not create a tarball and it will just sync the backup dir
## 
## A simple script for backing up your complete root tree incrementally.
## Source: https://wiki.archlinux.org/index.php/Full_System_Backup_with_rsync

(( $UID )) && { echo 'you need to be root to run this script'; exit 1; }

args=$(getopt -l "searchpath:" -o "p:b:t:n" -- "$@")

eval set -- "$args"

while [ $# -ge 1 ]; do
        case "$1" in
                --)
                    # No more options left.
                    shift
                    break
                   ;;
                -p|--password)
                        password="$2"
                        shift
                        ;;
                -b|--backup-dir)
                        backup_dir="$2"
                        shift
                        ;;
                -t|--tarball-dir)
                        backup_dir_tar="$2"
                        shift
                        ;;
                -n|--no-tarball)
                        no_tar=1
                        shift
                        ;;
        esac

        shift
done


if [ -z "$backup_dir" ]; then
     backup_dir="/var/backups/rootfs"
fi

if [ -z "$backup_dir_tar" ]; then
     backup_dir_tar="/home/MYUSER/Dropbox"
fi

if [ -z "$password" ]; then
     password="S0m3P4ss!"
fi


echo "Syncing / to $backup_dir..."

/bin/nice -n 17 /usr/bin/rsync --delete -aAXv /* $backup_dir --exclude={/dev/*,/proc/*,/sys/*,/tmp/*,/run/*,/mnt/*,/media/*,/lost+found,$backup_dir,/home/*/Dropbox/*,/home/*/.cache/*,/var/lib/pacman/sync/*,/var/log/journal/*,/home/*/.thumbnails/*,/home/*/.mozilla/firefox/*.default/Cache/*,/home/*/.cache/chromium/*,/home/*/.bitcoin/blocks/*,/home/*/.litecoin/blocks/*,/home/*/.feathercoin/blk*,/home/*/.dogecoin/blk*,/home/*/.android/avd/*} > /dev/null 2>&1



echo "Saving installed packages to $backup_dir/(aur)pkglist.txt"

pacman -Qqen > $backup_dir/pkglist.txt
pacman -Qqem > $backup_dir/aurpkglist.txt

if [ -z "$no_tar" ]; then
    echo "Creating tarball in $backup_dir_tar..."

    /usr/lib/systemd/scripts/pakbak

    # make a tarball from the backed up dir
    /bin/nice -n 17 /bin/tar -cpzf - $backup_dir | openssl enc -aes-256-cbc -e -pass pass:$password > $backup_dir_tar/system_backup.tar.gz.enc

    # decrypt with to the directory you are now
    # /bin/nice -n 17 /usr/bin/openssl enc -in $backup_dir_tar/system_backup.tar.gz.enc -aes-256-cbc -pass pass:$password -d | /bin/tar -zxvf -

fi
